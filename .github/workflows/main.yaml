name: Main
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
  TARGET_DIRECTORY: /opt/compose/personal-website/
  PGID: 1000
  PUID: 1000
  TZ: Etc/UTC
  USER_DIR: /opt/appdata/personal-website/
  DOMAIN_NAME: davydehaas.nl
  WEBSITE_URL: https://davydehaas.nl

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
      - name: Set up Node
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install npm dependencies
        run: npm ci
      - name: Test
        run: npm test --if-present

  deliver:
    name: Deliver
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
      - name: Login to registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push to registry
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-${{ github.run_number }}-${{ github.run_attempt }}
  deploy:
    name: Deploy
    needs: deliver
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
      - name: SSH SCP | Copy docker-compose.yaml
        uses: appleboy/scp-action@917f8b81dfc1ccd331fef9e2d61bdc6c8be94634 # v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          #password: ${{ secrets.SSH_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: docker-compose.yaml
          target: ${{ env.TARGET_DIRECTORY }}
          # remove target folder before uploading data
          rm: true
      - name: SSH | Start container
        uses: appleboy/ssh-action@029f5b4aeeeb58fdfe1410a5d17f967dacf36262 # v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          #password: ${{ secrets.SSH_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ${{ env.TARGET_DIRECTORY }}

            echo 'PGID=${{ env.PGID }}' >> .env
            echo 'PUID=${{ env.PUID }}' >> .env
            echo 'TZ=${{ env.TZ }}' >> .env

            echo 'USER_DIR=${{ env.USER_DIR }}' >> .env
            echo 'DOMAIN_NAME=${{ env.DOMAIN_NAME }}' >> .env

            echo 'DOCKER_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}' >> .env
            echo 'DOCKER_TAG=main-${{ github.run_number }}-${{ github.run_attempt }}' >> .env

            docker compose -f docker-compose.yaml up -d
  lighthouse-check:
    name: Lighthouse check
    needs: deploy
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
      - name: Create directory lighthouse-report
        run: mkdir -p ${{ github.workspace }}/tmp/lighthouse-report
      - name: Lighthouse check
        uses: foo-software/lighthouse-check-action@a80267da2e0244b8a2e457a8575fc47590615852 # v12.0.1
        id: lighthouseCheck
        with:
          outputDirectory: ${{ github.workspace }}/tmp/lighthouse-report
          urls: ${{ env.WEBSITE_URL }}
      - name: Upload Lighthouse check results
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: lighthouse-report
          path: ${{ github.workspace }}/tmp/lighthouse-report
      - name: Verify Lighthouse check results
        uses: foo-software/lighthouse-check-status-action@2b9d5101f7a0de86ddb153a0d77ad7046aac1052 # v3.0.1
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: "90"
          minBestPracticesScore: "50"
          minPerformanceScore: "50"
          minProgressiveWebAppScore: "50"
          minSeoScore: "50"
  zap-scan:
    name: ZAP scan
    needs: deploy
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
      - name: ZAP scan
        uses: zaproxy/action-baseline@0619037bb784a56e2e06b104f0ebe157e076f075 # v0.13.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ env.WEBSITE_URL }}
          rules_file_name: .zap/rules.tsv
          cmd_options: -a
  k6-load-test:
    name: k6 load test
    needs: [lighthouse-check, zap-scan]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
      - name: k6 load test
        uses: grafana/k6-action@e4714b734f2b0afaabeb7b4a69142745548ab9ec # v0.3.1
        with:
          filename: load-test.js
          flags: --out json=results.json
      - name: Upload k6 load test results
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: k6-results
          path: results.json
